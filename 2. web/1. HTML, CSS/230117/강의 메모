디스플레이 속성은 1차원 (inline, block, inline-block, none, flex)
포지션은 3차원

//////////////////////////자바스크립트///////////////////////////


자바, c샵- 객체지향 언어
파이썬- 데이터사이언스, 교육용
자바스크립트- 다른세상언어임,,브라우저용 언어

# js(자바스크립트)의 엑기스는?
  - 객체 object
  - 함수 function
  - 배열 arr (배열안에 객체!)

1. 변수 선언시 선언자를 반드시 붙이기
2. 선언자는 총 세종류가 있다.
  - var:안쓴다. 가끔 코딩선배들이 쓰는데 뭐라하진 말기.
  - let:안쓴다. 
  - const:이걸쓰자. 근데 만약 작동안되면 let쓰기.
  + for 문을 제외하고는 거의 const만 사용(근데 for문 잘안씀)

3. 타입
  - int 존재하지 않음. 숫자면 그냥 다 number로 나옴.
  - a/abc 둘다 string, 기본적으로 ""로 묶는다.(''아님)
  - 크기선언도 안함.
  - true/false 는 boolean
  - null 은 object
  - undefined 는 undefined
  + 0 = 그냥 영
  + null = 개발자가 의도적으로 비워둔 
  + undefined = 개발자의 의도와 상관없이 비워진. 에러처럼??
  - 배열 선언시 대괄호[], 크기선언도 안함. 타입은 object
  + 배열 뒷부분 부르면 에러가 아니라 undefined. 따라서 신경써줘야함

4. 함수
  - 이름을 지을땐 /명사+동사/ 형태로
  - 함수의 리턴 타입은 없음(ex. void)
  - 동적타입언어라서 파라미터 자리에 타입 지정 없음
      -----------------------------
      function addOne(n){
        console.log("hi");
        return n + 1;
      }

      console.log(addOne(2));
      -----------------------------

  - 밑에는 함수가 아님 타입 변경하는 법.
      -----------------------------
      function NumToString(n){
        return String(n);
      }
      function StringToNum(text){
        return Number(text);
      }
      const a = numToString(2);
      const b = StringToNum('2');
      console,log(a);
      console,log(b);
      -----------------------------

  - 함수는 변수인가?
  + 이름 없는 함수는 람다라고함.
      -----------------------------
      const samplefn = function(){
        return 'a';
      }
      samplefn();
      -----------------------------

  - 자바스크립트에서 함수자체를 변수처럼 가능. 함수이름뒤 () 뺄 수 있음. 
  + 함수를 변수처럼 불러오기 쌉가능

5. 객체(object)
  - 정의(★★★) : key와 value로 이루어진 property의 모음
      -----------------------------
      const person = {
        name: "정진솔",
        dateOfBirth:1998,
        familyMembers: ["아빠", "엄마"],
        job: "학생",
        isMerriaged: false,
      };

      console.log(person.familyMembers[1]);
      -----------------------------
  - 객체에는 순서가 존재하지 않음
  - 여러 자료형을 한번에 쓰고 싶을때 객체를 사용.
  - 배열과 객체의 각각의 요소는 const로 선언해도 바꿀 수 있음.
      -----------------------------
      const person = {
      name: "정진솔",
      dateOfBirth:1998,
      familyMembers: ["아빠", "엄마"],
      job: "학생",
      isMerriaged: false
      };
      
      person.name = "랄라라"
      -----------------------------
  -키값도 밀어넣을 수 있음.
      -----------------------------
      const person = {
      name: "정진솔",
      dateOfBirth:1998,
      familyMembers: ["아빠", "엄마"],
      job: "학생",
      isMerriaged: false
      };
      person.home = "임실군"
      -----------------------------
  - 다시 선언은 안됨.
      -----------------------------
      const person = {
      name: "정진솔",
      dateOfBirth:1998,
      familyMembers: ["아빠", "엄마"],
      job: "학생",
      isMerriaged: false
      school: "인천대"
      };
      -----------------------------
6. 배열
  - 다시 선언 안됨.
      -----------------------------
      const arr = { 1,2,3};
      arr = {4,5,6};
      -----------------------------
  - 집어넣기
      -----------------------------
      const arr = [1,2,3]
      arr.push(4);
      console.log(arr);
      -----------------------------
7.
  - '+' 연산자로 문자열 붙이기 가능
      -----------------------------
      const a = "abc" + "Bbq";
      const b = "bbq" + 10;
      console.log(a, b);
      -----------------------------
  - length는 함수가 아니라 기능. for문에서 자주 사용
  - 비교연산 '=== / !==' 은 타입까지 비교.'=='은 안씀.
8. for문
  - let 사용
      -----------------------------
      const arr = [1,2,3];
      for (let i = 0; i < arr.length; i++) {
       console.log(arr[i]);
      }
      -----------------------------
